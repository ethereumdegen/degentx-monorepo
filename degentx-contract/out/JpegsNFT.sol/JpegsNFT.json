{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "minter",
          "type": "address"
        }
      ],
      "name": "SetMinter",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseUri",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "hasMintableNft",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintedTokenCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseUri",
          "type": "string"
        }
      ],
      "name": "registerBaseUri",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_tokenId",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_ext",
          "type": "string"
        }
      ],
      "name": "registerUriExtension",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_minter",
          "type": "address"
        }
      ],
      "name": "setMinter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "uriExtensions",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040518060400160405280600781526020016630784a5045477360c81b815250604051806040016040528060038152602001624a504760e81b81525081600090816200005f91906200018c565b5060016200006e82826200018c565b5050506200008b620000856200009160201b60201c565b62000095565b62000258565b3390565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c908216806200011257607f821691505b6020821081036200013357634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200018757600081815260208120601f850160051c81016020861015620001625750805b601f850160051c820191505b8181101562000183578281556001016200016e565b5050505b505050565b81516001600160401b03811115620001a857620001a8620000e7565b620001c081620001b98454620000fd565b8462000139565b602080601f831160018114620001f85760008415620001df5750858301515b600019600386901b1c1916600185901b17855562000183565b600085815260208120601f198616915b82811015620002295788860151825594840194600190910190840162000208565b5085821015620002485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6118f680620002686000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c80638da5cb5b116100de578063dc613fa111610097578063e985e9c511610071578063e985e9c514610318578063f2fde38b14610354578063fca3b5aa14610367578063fdf5a49f1461037a57600080fd5b8063dc613fa1146102df578063e055bf72146102f2578063e5fdcbda1461030557600080fd5b80638da5cb5b1461028557806395d89b41146102965780639abc83201461029e578063a22cb465146102a6578063b88d4fde146102b9578063c87b56dd146102cc57600080fd5b806323b872dd1161013057806323b872dd1461021057806342842e0e146102235780636352211e146102365780636a6278421461024957806370a082311461026a578063715018a61461027d57600080fd5b806301ffc9a71461017857806306fdde03146101a057806307546172146101b5578063081812fc146101e0578063095ea7b3146101f35780630e7e0a9314610208575b600080fd5b61018b61018636600461121c565b610383565b60405190151581526020015b60405180910390f35b6101a86103f0565b6040516101979190611289565b6007546101c8906001600160a01b031681565b6040516001600160a01b039091168152602001610197565b6101c86101ee36600461129c565b610482565b6102066102013660046112cc565b6104a9565b005b61018b6105c3565b61020661021e3660046112f6565b61066a565b6102066102313660046112f6565b61069b565b6101c861024436600461129c565b6106b6565b61025c610257366004611332565b610716565b604051908152602001610197565b61025c610278366004611332565b6107fb565b610206610881565b6006546001600160a01b03166101c8565b6101a8610895565b6101a86108a4565b6102066102b436600461134d565b610932565b6102066102c736600461139f565b610941565b6101a86102da36600461129c565b610979565b6102066102ed3660046114c4565b6109ea565b610206610300366004611506565b6109ff565b6101a861031336600461129c565b610a20565b61018b610326366004611552565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610206610362366004611332565b610a39565b610206610375366004611332565b610ab2565b61025c600a5481565b60006307f5828d60e41b6001600160e01b0319831614806103b457506307f5828d60e41b6001600160e01b03198316145b806103cf57506380ac58cd60e01b6001600160e01b03198316145b806103ea5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600080546103ff90611585565b80601f016020809104026020016040519081016040528092919081815260200182805461042b90611585565b80156104785780601f1061044d57610100808354040283529160200191610478565b820191906000526020600020905b81548152906001019060200180831161045b57829003601f168201915b5050505050905090565b600061048d82610b0e565b506000908152600460205260409020546001600160a01b031690565b60006104b4826106b6565b9050806001600160a01b0316836001600160a01b0316036105265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054257506105428133610326565b6105b45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161051d565b6105be8383610b6d565b505050565b600a54600090815260096020526040812080548291906105e290611585565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90611585565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b50509251151595945050505050565b6106743382610bdb565b6106905760405162461bcd60e51b815260040161051d906115bf565b6105be838383610c5a565b6105be83838360405180602001604052806000815250610941565b6000818152600260205260408120546001600160a01b0316806103ea5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161051d565b6007546000906001600160a01b031633146107735760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f7420746865206d696e7465722e00000000000000604482015260640161051d565b61077b6105c3565b6107d65760405162461bcd60e51b815260206004820152602660248201527f5468657265206973206e6f7420616e206e667420617661696c61626c6520746f6044820152651036b4b73a1760d11b606482015260840161051d565b600a80549060006107e68361160c565b9190505590506107f68282610dbe565b919050565b60006001600160a01b0382166108655760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161051d565b506001600160a01b031660009081526003602052604090205490565b610889610f49565b6108936000610fa3565b565b6060600180546103ff90611585565b600880546108b190611585565b80601f01602080910402602001604051908101604052809291908181526020018280546108dd90611585565b801561092a5780601f106108ff5761010080835404028352916020019161092a565b820191906000526020600020905b81548152906001019060200180831161090d57829003601f168201915b505050505081565b61093d338383610ff5565b5050565b61094b3383610bdb565b6109675760405162461bcd60e51b815260040161051d906115bf565b610973848484846110c3565b50505050565b606061098482610b0e565b600061098e6110f6565b905060008151116109ae57604051806020016040528060008152506109e3565b80600960008581526020019081526020016000206040516020016109d3929190611633565b6040516020818303038152906040525b9392505050565b6109f2610f49565b60086105be82848361170e565b610a07610f49565b600083815260096020526040902061097382848361170e565b600960205260009081526040902080546108b190611585565b610a41610f49565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161051d565b610aaf81610fa3565b50565b610aba610f49565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527fcec52196e972044edde8689a1b608e459c5946b7f3e5c8cd3d6d8e126d422e1c9060200160405180910390a150565b6000818152600260205260409020546001600160a01b0316610aaf5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161051d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ba2826106b6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610be7836106b6565b9050806001600160a01b0316846001600160a01b03161480610c2e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c525750836001600160a01b0316610c4784610482565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c6d826106b6565b6001600160a01b031614610c935760405162461bcd60e51b815260040161051d906117cf565b6001600160a01b038216610cf55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161051d565b826001600160a01b0316610d08826106b6565b6001600160a01b031614610d2e5760405162461bcd60e51b815260040161051d906117cf565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e145760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161051d565b6000818152600260205260409020546001600160a01b031615610e795760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161051d565b6000818152600260205260409020546001600160a01b031615610ede5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161051d565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6006546001600160a01b031633146108935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051d565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110565760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161051d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110ce848484610c5a565b6110da84848484611105565b6109735760405162461bcd60e51b815260040161051d90611814565b6060600880546103ff90611585565b60006001600160a01b0384163b156111fb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611149903390899088908890600401611866565b6020604051808303816000875af1925050508015611184575060408051601f3d908101601f19168201909252611181918101906118a3565b60015b6111e1573d8080156111b2576040519150601f19603f3d011682016040523d82523d6000602084013e6111b7565b606091505b5080516000036111d95760405162461bcd60e51b815260040161051d90611814565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c52565b506001949350505050565b6001600160e01b031981168114610aaf57600080fd5b60006020828403121561122e57600080fd5b81356109e381611206565b60005b8381101561125457818101518382015260200161123c565b50506000910152565b60008151808452611275816020860160208601611239565b601f01601f19169290920160200192915050565b6020815260006109e3602083018461125d565b6000602082840312156112ae57600080fd5b5035919050565b80356001600160a01b03811681146107f657600080fd5b600080604083850312156112df57600080fd5b6112e8836112b5565b946020939093013593505050565b60008060006060848603121561130b57600080fd5b611314846112b5565b9250611322602085016112b5565b9150604084013590509250925092565b60006020828403121561134457600080fd5b6109e3826112b5565b6000806040838503121561136057600080fd5b611369836112b5565b91506020830135801515811461137e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113b557600080fd5b6113be856112b5565b93506113cc602086016112b5565b925060408501359150606085013567ffffffffffffffff808211156113f057600080fd5b818701915087601f83011261140457600080fd5b81358181111561141657611416611389565b604051601f8201601f19908116603f0116810190838211818310171561143e5761143e611389565b816040528281528a602084870101111561145757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f84011261148d57600080fd5b50813567ffffffffffffffff8111156114a557600080fd5b6020830191508360208285010111156114bd57600080fd5b9250929050565b600080602083850312156114d757600080fd5b823567ffffffffffffffff8111156114ee57600080fd5b6114fa8582860161147b565b90969095509350505050565b60008060006040848603121561151b57600080fd5b83359250602084013567ffffffffffffffff81111561153957600080fd5b6115458682870161147b565b9497909650939450505050565b6000806040838503121561156557600080fd5b61156e836112b5565b915061157c602084016112b5565b90509250929050565b600181811c9082168061159957607f821691505b6020821081036115b957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60006001820161162c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000835160206116468285838901611239565b81840191506000855461165881611585565b600182811680156116705760018114611685576116b1565b60ff19841687528215158302870194506116b1565b896000528560002060005b848110156116a957815489820152908301908701611690565b505082870194505b50929998505050505050505050565b601f8211156105be57600081815260208120601f850160051c810160208610156116e75750805b601f850160051c820191505b81811015611706578281556001016116f3565b505050505050565b67ffffffffffffffff83111561172657611726611389565b61173a836117348354611585565b836116c0565b6000601f84116001811461176e57600085156117565750838201355b600019600387901b1c1916600186901b1783556117c8565b600083815260209020601f19861690835b8281101561179f578685013582556020948501946001909201910161177f565b50868210156117bc5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118999083018461125d565b9695505050505050565b6000602082840312156118b557600080fd5b81516109e38161120656fea264697066735822122077471e490be29cd60be884ac10c1bc2dc27258b0cb286c72bb15e2501fa4e7df64736f6c63430008110033",
    "sourceMap": "364:2277:0:-:0;;;733:51;;;;;;;;;;1390:113:11;;;;;;;;;;;;;-1:-1:-1;;;1390:113:11;;;;;;;;;;;;;;;;-1:-1:-1;;;1390:113:11;;;1464:5;1456;:13;;;;;;:::i;:::-;-1:-1:-1;1479:7:11;:17;1489:7;1479;:17;:::i;:::-;;1390:113;;936:32:9;955:12;:10;;;:12;;:::i;:::-;936:18;:32::i;:::-;364:2277:0;;640:96:16;719:10;;640:96::o;2433:187:9:-;2525:6;;;-1:-1:-1;;;;;2541:17:9;;;-1:-1:-1;;;;;;2541:17:9;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;14:127:22:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:22;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:22;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:22;;;2580:26;2531:89;-1:-1:-1;;1335:1:22;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:22;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:22;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:22;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:22:o;:::-;364:2277:0;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101735760003560e01c80638da5cb5b116100de578063dc613fa111610097578063e985e9c511610071578063e985e9c514610318578063f2fde38b14610354578063fca3b5aa14610367578063fdf5a49f1461037a57600080fd5b8063dc613fa1146102df578063e055bf72146102f2578063e5fdcbda1461030557600080fd5b80638da5cb5b1461028557806395d89b41146102965780639abc83201461029e578063a22cb465146102a6578063b88d4fde146102b9578063c87b56dd146102cc57600080fd5b806323b872dd1161013057806323b872dd1461021057806342842e0e146102235780636352211e146102365780636a6278421461024957806370a082311461026a578063715018a61461027d57600080fd5b806301ffc9a71461017857806306fdde03146101a057806307546172146101b5578063081812fc146101e0578063095ea7b3146101f35780630e7e0a9314610208575b600080fd5b61018b61018636600461121c565b610383565b60405190151581526020015b60405180910390f35b6101a86103f0565b6040516101979190611289565b6007546101c8906001600160a01b031681565b6040516001600160a01b039091168152602001610197565b6101c86101ee36600461129c565b610482565b6102066102013660046112cc565b6104a9565b005b61018b6105c3565b61020661021e3660046112f6565b61066a565b6102066102313660046112f6565b61069b565b6101c861024436600461129c565b6106b6565b61025c610257366004611332565b610716565b604051908152602001610197565b61025c610278366004611332565b6107fb565b610206610881565b6006546001600160a01b03166101c8565b6101a8610895565b6101a86108a4565b6102066102b436600461134d565b610932565b6102066102c736600461139f565b610941565b6101a86102da36600461129c565b610979565b6102066102ed3660046114c4565b6109ea565b610206610300366004611506565b6109ff565b6101a861031336600461129c565b610a20565b61018b610326366004611552565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b610206610362366004611332565b610a39565b610206610375366004611332565b610ab2565b61025c600a5481565b60006307f5828d60e41b6001600160e01b0319831614806103b457506307f5828d60e41b6001600160e01b03198316145b806103cf57506380ac58cd60e01b6001600160e01b03198316145b806103ea5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6060600080546103ff90611585565b80601f016020809104026020016040519081016040528092919081815260200182805461042b90611585565b80156104785780601f1061044d57610100808354040283529160200191610478565b820191906000526020600020905b81548152906001019060200180831161045b57829003601f168201915b5050505050905090565b600061048d82610b0e565b506000908152600460205260409020546001600160a01b031690565b60006104b4826106b6565b9050806001600160a01b0316836001600160a01b0316036105265760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b60648201526084015b60405180910390fd5b336001600160a01b038216148061054257506105428133610326565b6105b45760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161051d565b6105be8383610b6d565b505050565b600a54600090815260096020526040812080548291906105e290611585565b80601f016020809104026020016040519081016040528092919081815260200182805461060e90611585565b801561065b5780601f106106305761010080835404028352916020019161065b565b820191906000526020600020905b81548152906001019060200180831161063e57829003601f168201915b50509251151595945050505050565b6106743382610bdb565b6106905760405162461bcd60e51b815260040161051d906115bf565b6105be838383610c5a565b6105be83838360405180602001604052806000815250610941565b6000818152600260205260408120546001600160a01b0316806103ea5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161051d565b6007546000906001600160a01b031633146107735760405162461bcd60e51b815260206004820152601960248201527f63616c6c6572206973206e6f7420746865206d696e7465722e00000000000000604482015260640161051d565b61077b6105c3565b6107d65760405162461bcd60e51b815260206004820152602660248201527f5468657265206973206e6f7420616e206e667420617661696c61626c6520746f6044820152651036b4b73a1760d11b606482015260840161051d565b600a80549060006107e68361160c565b9190505590506107f68282610dbe565b919050565b60006001600160a01b0382166108655760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b606482015260840161051d565b506001600160a01b031660009081526003602052604090205490565b610889610f49565b6108936000610fa3565b565b6060600180546103ff90611585565b600880546108b190611585565b80601f01602080910402602001604051908101604052809291908181526020018280546108dd90611585565b801561092a5780601f106108ff5761010080835404028352916020019161092a565b820191906000526020600020905b81548152906001019060200180831161090d57829003601f168201915b505050505081565b61093d338383610ff5565b5050565b61094b3383610bdb565b6109675760405162461bcd60e51b815260040161051d906115bf565b610973848484846110c3565b50505050565b606061098482610b0e565b600061098e6110f6565b905060008151116109ae57604051806020016040528060008152506109e3565b80600960008581526020019081526020016000206040516020016109d3929190611633565b6040516020818303038152906040525b9392505050565b6109f2610f49565b60086105be82848361170e565b610a07610f49565b600083815260096020526040902061097382848361170e565b600960205260009081526040902080546108b190611585565b610a41610f49565b6001600160a01b038116610aa65760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161051d565b610aaf81610fa3565b50565b610aba610f49565b600780546001600160a01b0319166001600160a01b0383169081179091556040519081527fcec52196e972044edde8689a1b608e459c5946b7f3e5c8cd3d6d8e126d422e1c9060200160405180910390a150565b6000818152600260205260409020546001600160a01b0316610aaf5760405162461bcd60e51b8152602060048201526018602482015277115490cdcc8c4e881a5b9d985b1a59081d1bdad95b88125160421b604482015260640161051d565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610ba2826106b6565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600080610be7836106b6565b9050806001600160a01b0316846001600160a01b03161480610c2e57506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b80610c525750836001600160a01b0316610c4784610482565b6001600160a01b0316145b949350505050565b826001600160a01b0316610c6d826106b6565b6001600160a01b031614610c935760405162461bcd60e51b815260040161051d906117cf565b6001600160a01b038216610cf55760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b606482015260840161051d565b826001600160a01b0316610d08826106b6565b6001600160a01b031614610d2e5760405162461bcd60e51b815260040161051d906117cf565b600081815260046020908152604080832080546001600160a01b03199081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6001600160a01b038216610e145760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161051d565b6000818152600260205260409020546001600160a01b031615610e795760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161051d565b6000818152600260205260409020546001600160a01b031615610ede5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161051d565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b6006546001600160a01b031633146108935760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161051d565b600680546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b816001600160a01b0316836001600160a01b0316036110565760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161051d565b6001600160a01b03838116600081815260056020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6110ce848484610c5a565b6110da84848484611105565b6109735760405162461bcd60e51b815260040161051d90611814565b6060600880546103ff90611585565b60006001600160a01b0384163b156111fb57604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290611149903390899088908890600401611866565b6020604051808303816000875af1925050508015611184575060408051601f3d908101601f19168201909252611181918101906118a3565b60015b6111e1573d8080156111b2576040519150601f19603f3d011682016040523d82523d6000602084013e6111b7565b606091505b5080516000036111d95760405162461bcd60e51b815260040161051d90611814565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610c52565b506001949350505050565b6001600160e01b031981168114610aaf57600080fd5b60006020828403121561122e57600080fd5b81356109e381611206565b60005b8381101561125457818101518382015260200161123c565b50506000910152565b60008151808452611275816020860160208601611239565b601f01601f19169290920160200192915050565b6020815260006109e3602083018461125d565b6000602082840312156112ae57600080fd5b5035919050565b80356001600160a01b03811681146107f657600080fd5b600080604083850312156112df57600080fd5b6112e8836112b5565b946020939093013593505050565b60008060006060848603121561130b57600080fd5b611314846112b5565b9250611322602085016112b5565b9150604084013590509250925092565b60006020828403121561134457600080fd5b6109e3826112b5565b6000806040838503121561136057600080fd5b611369836112b5565b91506020830135801515811461137e57600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b600080600080608085870312156113b557600080fd5b6113be856112b5565b93506113cc602086016112b5565b925060408501359150606085013567ffffffffffffffff808211156113f057600080fd5b818701915087601f83011261140457600080fd5b81358181111561141657611416611389565b604051601f8201601f19908116603f0116810190838211818310171561143e5761143e611389565b816040528281528a602084870101111561145757600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008083601f84011261148d57600080fd5b50813567ffffffffffffffff8111156114a557600080fd5b6020830191508360208285010111156114bd57600080fd5b9250929050565b600080602083850312156114d757600080fd5b823567ffffffffffffffff8111156114ee57600080fd5b6114fa8582860161147b565b90969095509350505050565b60008060006040848603121561151b57600080fd5b83359250602084013567ffffffffffffffff81111561153957600080fd5b6115458682870161147b565b9497909650939450505050565b6000806040838503121561156557600080fd5b61156e836112b5565b915061157c602084016112b5565b90509250929050565b600181811c9082168061159957607f821691505b6020821081036115b957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602d908201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560408201526c1c881bdc88185c1c1c9bdd9959609a1b606082015260800190565b60006001820161162c57634e487b7160e01b600052601160045260246000fd5b5060010190565b6000835160206116468285838901611239565b81840191506000855461165881611585565b600182811680156116705760018114611685576116b1565b60ff19841687528215158302870194506116b1565b896000528560002060005b848110156116a957815489820152908301908701611690565b505082870194505b50929998505050505050505050565b601f8211156105be57600081815260208120601f850160051c810160208610156116e75750805b601f850160051c820191505b81811015611706578281556001016116f3565b505050505050565b67ffffffffffffffff83111561172657611726611389565b61173a836117348354611585565b836116c0565b6000601f84116001811461176e57600085156117565750838201355b600019600387901b1c1916600186901b1783556117c8565b600083815260209020601f19861690835b8281101561179f578685013582556020948501946001909201910161177f565b50868210156117bc5760001960f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60208082526025908201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060408201526437bbb732b960d91b606082015260800190565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6001600160a01b03858116825284166020820152604081018390526080606082018190526000906118999083018461125d565b9695505050505050565b6000602082840312156118b557600080fd5b81516109e38161120656fea264697066735822122077471e490be29cd60be884ac10c1bc2dc27258b0cb286c72bb15e2501fa4e7df64736f6c63430008110033",
    "sourceMap": "364:2277:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2305:325;;;;;;:::i;:::-;;:::i;:::-;;;565:14:22;;558:22;540:41;;528:2;513:18;2305:325:0;;;;;;;;2471:98:11;;;:::i;:::-;;;;;;;:::i;424:21:0:-;;;;;-1:-1:-1;;;;;424:21:0;;;;;;-1:-1:-1;;;;;1512:32:22;;;1494:51;;1482:2;1467:18;424:21:0;1348:203:22;3935:167:11;;;;;;:::i;:::-;;:::i;3468:406::-;;;;;;:::i;:::-;;:::i;:::-;;977:164:0;;;:::i;4612:326:11:-;;;;;;:::i;:::-;;:::i;5004:179::-;;;;;;:::i;:::-;;:::i;2190:219::-;;;;;;:::i;:::-;;:::i;1148:261:0:-;;;;;;:::i;:::-;;:::i;:::-;;;2848:25:22;;;2836:2;2821:18;1148:261:0;2702:177:22;1929:204:11;;;;;;:::i;:::-;;:::i;1831:101:9:-;;;:::i;1201:85::-;1273:6;;-1:-1:-1;;;;;1273:6:9;1201:85;;2633:102:11;;;:::i;452:21:0:-;;;:::i;4169:153:11:-;;;;;;:::i;:::-;;:::i;5249:314::-;;;;;;:::i;:::-;;:::i;2022:272:0:-;;;;;;:::i;:::-;;:::i;1594:106::-;;;;;;:::i;:::-;;:::i;1770:137::-;;;;;;:::i;:::-;;:::i;480:47::-;;;;;;:::i;:::-;;:::i;4388:162:11:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4508:25:11;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4388:162;2081:198:9;;;;;;:::i;:::-;;:::i;1415:121:0:-;;;;;;:::i;:::-;;:::i;534:31::-;;;;;;2305:325;2382:4;-1:-1:-1;;;;;;;;;2411:25:0;;;;:87;;-1:-1:-1;;;;;;;;;;2473:25:0;;;2411:87;:140;;;-1:-1:-1;;;;;;;;;;2526:25:0;;;2411:140;:192;;;-1:-1:-1;;;;;;;;;;2578:25:0;;;2411:192;2404:199;2305:325;-1:-1:-1;;2305:325:0:o;2471:98:11:-;2525:13;2557:5;2550:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2471:98;:::o;3935:167::-;4011:7;4030:23;4045:7;4030:14;:23::i;:::-;-1:-1:-1;4071:24:11;;;;:15;:24;;;;;;-1:-1:-1;;;;;4071:24:11;;3935:167::o;3468:406::-;3548:13;3564:23;3579:7;3564:14;:23::i;:::-;3548:39;;3611:5;-1:-1:-1;;;;;3605:11:11;:2;-1:-1:-1;;;;;3605:11:11;;3597:57;;;;-1:-1:-1;;;3597:57:11;;6616:2:22;3597:57:11;;;6598:21:22;6655:2;6635:18;;;6628:30;6694:34;6674:18;;;6667:62;-1:-1:-1;;;6745:18:22;;;6738:31;6786:19;;3597:57:11;;;;;;;;;719:10:16;-1:-1:-1;;;;;3686:21:11;;;;:62;;-1:-1:-1;3711:37:11;3728:5;719:10:16;4388:162:11;:::i;3711:37::-;3665:170;;;;-1:-1:-1;;;3665:170:11;;7018:2:22;3665:170:11;;;7000:21:22;7057:2;7037:18;;;7030:30;7096:34;7076:18;;;7069:62;7167:31;7147:18;;;7140:59;7216:19;;3665:170:11;6816:425:22;3665:170:11;3846:21;3855:2;3859:7;3846:8;:21::i;:::-;3538:336;3468:406;;:::o;977:164:0:-;1076:16;;1024:4;1062:31;;;:13;:31;;;;;1042:51;;1024:4;;1062:31;1042:51;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1111:17:0;;:21;;;977:164;-1:-1:-1;;;;;977:164:0:o;4612:326:11:-;4801:41;719:10:16;4834:7:11;4801:18;:41::i;:::-;4793:99;;;;-1:-1:-1;;;4793:99:11;;;;;;;:::i;:::-;4903:28;4913:4;4919:2;4923:7;4903:9;:28::i;5004:179::-;5137:39;5154:4;5160:2;5164:7;5137:39;;;;;;;;;;;;:16;:39::i;2190:219::-;2262:7;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:11;;2324:56;;;;-1:-1:-1;;;2324:56:11;;7862:2:22;2324:56:11;;;7844:21:22;7901:2;7881:18;;;7874:30;-1:-1:-1;;;7920:18:22;;;7913:54;7984:18;;2324:56:11;7660:348:22;1148:261:0;672:6;;1203:15;;-1:-1:-1;;;;;672:6:0;658:10;:20;650:58;;;;-1:-1:-1;;;650:58:0;;8215:2:22;650:58:0;;;8197:21:22;8254:2;8234:18;;;8227:30;8293:27;8273:18;;;8266:55;8338:18;;650:58:0;8013:349:22;650:58:0;1247:16:::1;:14;:16::i;:::-;1239:66;;;::::0;-1:-1:-1;;;1239:66:0;;8569:2:22;1239:66:0::1;::::0;::::1;8551:21:22::0;8608:2;8588:18;;;8581:30;8647:34;8627:18;;;8620:62;-1:-1:-1;;;8698:18:22;;;8691:36;8744:19;;1239:66:0::1;8367:402:22::0;1239:66:0::1;1326:16;:18:::0;;;:16:::1;:18;::::0;::::1;:::i;:::-;;;;;1316:28;;1355:18;1361:2;1365:7;1355:5;:18::i;:::-;1148:261:::0;;;:::o;1929:204:11:-;2001:7;-1:-1:-1;;;;;2028:19:11;;2020:73;;;;-1:-1:-1;;;2020:73:11;;9213:2:22;2020:73:11;;;9195:21:22;9252:2;9232:18;;;9225:30;9291:34;9271:18;;;9264:62;-1:-1:-1;;;9342:18:22;;;9335:39;9391:19;;2020:73:11;9011:405:22;2020:73:11;-1:-1:-1;;;;;;2110:16:11;;;;;:9;:16;;;;;;;1929:204::o;1831:101:9:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;2633:102:11:-;2689:13;2721:7;2714:14;;;;;:::i;452:21:0:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4169:153:11:-;4263:52;719:10:16;4296:8:11;4306;4263:18;:52::i;:::-;4169:153;;:::o;5249:314::-;5417:41;719:10:16;5450:7:11;5417:18;:41::i;:::-;5409:99;;;;-1:-1:-1;;;5409:99:11;;;;;;;:::i;:::-;5518:38;5532:4;5538:2;5542:7;5551:4;5518:13;:38::i;:::-;5249:314;;;;:::o;2022:272:0:-;2087:13;2112:23;2127:7;2112:14;:23::i;:::-;2146:21;2170:10;:8;:10::i;:::-;2146:34;;2221:1;2203:7;2197:21;:25;:90;;;;;;;;;;;;;;;;;2249:7;2258:13;:22;2272:7;2258:22;;;;;;;;;;;2232:49;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2197:90;2190:97;2022:272;-1:-1:-1;;;2022:272:0:o;1594:106::-;1094:13:9;:11;:13::i;:::-;1675:7:0::1;:18;1685:8:::0;;1675:7;:18:::1;:::i;1770:137::-:0;1094:13:9;:11;:13::i;:::-;1869:23:0::1;::::0;;;:13:::1;:23;::::0;;;;:30:::1;1895:4:::0;;1869:23;:30:::1;:::i;480:47::-:0;;;;;;;;;;;;;;;;:::i;2081:198:9:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:9;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:9;;12737:2:22;2161:73:9::1;::::0;::::1;12719:21:22::0;12776:2;12756:18;;;12749:30;12815:34;12795:18;;;12788:62;-1:-1:-1;;;12866:18:22;;;12859:36;12912:19;;2161:73:9::1;12535:402:22::0;2161:73:9::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1415:121:0:-;1094:13:9;:11;:13::i;:::-;1479:6:0::1;:16:::0;;-1:-1:-1;;;;;;1479:16:0::1;-1:-1:-1::0;;;;;1479:16:0;::::1;::::0;;::::1;::::0;;;1511:18:::1;::::0;1494:51:22;;;1511:18:0::1;::::0;1482:2:22;1467:18;1511::0::1;;;;;;;1415:121:::0;:::o;13466:133:11:-;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:11;13539:53;;;;-1:-1:-1;;;13539:53:11;;7862:2:22;13539:53:11;;;7844:21:22;7901:2;7881:18;;;7874:30;-1:-1:-1;;;7920:18:22;;;7913:54;7984:18;;13539:53:11;7660:348:22;12768:171:11;12842:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;12842:29:11;-1:-1:-1;;;;;12842:29:11;;;;;;;;:24;;12895:23;12842:24;12895:14;:23::i;:::-;-1:-1:-1;;;;;12886:46:11;;;;;;;;;;;12768:171;;:::o;7540:261::-;7633:4;7649:13;7665:23;7680:7;7665:14;:23::i;:::-;7649:39;;7717:5;-1:-1:-1;;;;;7706:16:11;:7;-1:-1:-1;;;;;7706:16:11;;:52;;;-1:-1:-1;;;;;;4508:25:11;;;4485:4;4508:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7726:32;7706:87;;;;7786:7;-1:-1:-1;;;;;7762:31:11;:20;7774:7;7762:11;:20::i;:::-;-1:-1:-1;;;;;7762:31:11;;7706:87;7698:96;7540:261;-1:-1:-1;;;;7540:261:11:o;11423:1233::-;11577:4;-1:-1:-1;;;;;11550:31:11;:23;11565:7;11550:14;:23::i;:::-;-1:-1:-1;;;;;11550:31:11;;11542:81;;;;-1:-1:-1;;;11542:81:11;;;;;;;:::i;:::-;-1:-1:-1;;;;;11641:16:11;;11633:65;;;;-1:-1:-1;;;11633:65:11;;13550:2:22;11633:65:11;;;13532:21:22;13589:2;13569:18;;;13562:30;13628:34;13608:18;;;13601:62;-1:-1:-1;;;13679:18:22;;;13672:34;13723:19;;11633:65:11;13348:400:22;11633:65:11;11878:4;-1:-1:-1;;;;;11851:31:11;:23;11866:7;11851:14;:23::i;:::-;-1:-1:-1;;;;;11851:31:11;;11843:81;;;;-1:-1:-1;;;11843:81:11;;;;;;;:::i;:::-;11993:24;;;;:15;:24;;;;;;;;11986:31;;-1:-1:-1;;;;;;11986:31:11;;;;;;-1:-1:-1;;;;;12461:15:11;;;;;;:9;:15;;;;;:20;;-1:-1:-1;;12461:20:11;;;12495:13;;;;;;;;;:18;;11986:31;12495:18;;;12533:16;;;:7;:16;;;;;;:21;;;;;;;;;;12570:27;;12009:7;;12570:27;;;3538:336;3468:406;;:::o;9091:920::-;-1:-1:-1;;;;;9170:16:11;;9162:61;;;;-1:-1:-1;;;9162:61:11;;13955:2:22;9162:61:11;;;13937:21:22;;;13974:18;;;13967:30;14033:34;14013:18;;;14006:62;14085:18;;9162:61:11;13753:356:22;9162:61:11;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:11;7344:31;9233:58;;;;-1:-1:-1;;;9233:58:11;;14316:2:22;9233:58:11;;;14298:21:22;14355:2;14335:18;;;14328:30;14394;14374:18;;;14367:58;14442:18;;9233:58:11;14114:352:22;9233:58:11;7321:4;6930:16;;;:7;:16;;;;;;-1:-1:-1;;;;;6930:16:11;7344:31;9437:58;;;;-1:-1:-1;;;9437:58:11;;14316:2:22;9437:58:11;;;14298:21:22;14355:2;14335:18;;;14328:30;14394;14374:18;;;14367:58;14442:18;;9437:58:11;14114:352:22;9437:58:11;-1:-1:-1;;;;;9837:13:11;;;;;;:9;:13;;;;;;;;:18;;9854:1;9837:18;;;9876:16;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9876:21:11;;;;;9913:33;9884:7;;9837:13;;9913:33;;9837:13;;9913:33;4169:153;;:::o;1359:130:9:-;1273:6;;-1:-1:-1;;;;;1273:6:9;719:10:16;1422:23:9;1414:68;;;;-1:-1:-1;;;1414:68:9;;14673:2:22;1414:68:9;;;14655:21:22;;;14692:18;;;14685:30;14751:34;14731:18;;;14724:62;14803:18;;1414:68:9;14471:356:22;2433:187:9;2525:6;;;-1:-1:-1;;;;;2541:17:9;;;-1:-1:-1;;;;;;2541:17:9;;;;;;;2573:40;;2525:6;;;2541:17;2525:6;;2573:40;;2506:16;;2573:40;2496:124;2433:187;:::o;13075:307:11:-;13225:8;-1:-1:-1;;;;;13216:17:11;:5;-1:-1:-1;;;;;13216:17:11;;13208:55;;;;-1:-1:-1;;;13208:55:11;;15034:2:22;13208:55:11;;;15016:21:22;15073:2;15053:18;;;15046:30;15112:27;15092:18;;;15085:55;15157:18;;13208:55:11;14832:349:22;13208:55:11;-1:-1:-1;;;;;13273:25:11;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;13273:46:11;;;;;;;;;;13334:41;;540::22;;;13334::11;;513:18:22;13334:41:11;;;;;;;13075:307;;;:::o;6424:305::-;6574:28;6584:4;6590:2;6594:7;6574:9;:28::i;:::-;6620:47;6643:4;6649:2;6653:7;6662:4;6620:22;:47::i;:::-;6612:110;;;;-1:-1:-1;;;6612:110:11;;;;;;;:::i;1915:98:0:-;1967:13;1999:7;1992:14;;;;;:::i;14151:831:11:-;14300:4;-1:-1:-1;;;;;14320:13:11;;1465:19:15;:23;14316:660:11;;14355:71;;-1:-1:-1;;;14355:71:11;;-1:-1:-1;;;;;14355:36:11;;;;;:71;;719:10:16;;14406:4:11;;14412:7;;14421:4;;14355:71;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14355:71:11;;;;;;;;-1:-1:-1;;14355:71:11;;;;;;;;;;;;:::i;:::-;;;14351:573;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14593:6;:13;14610:1;14593:18;14589:321;;14635:60;;-1:-1:-1;;;14635:60:11;;;;;;;:::i;14589:321::-;14862:6;14856:13;14847:6;14843:2;14839:15;14832:38;14351:573;-1:-1:-1;;;;;;14476:51:11;-1:-1:-1;;;14476:51:11;;-1:-1:-1;14469:58:11;;14316:660;-1:-1:-1;14961:4:11;14151:831;;;;;;:::o;14:131:22:-;-1:-1:-1;;;;;;88:32:22;;78:43;;68:71;;135:1;132;125:12;150:245;208:6;261:2;249:9;240:7;236:23;232:32;229:52;;;277:1;274;267:12;229:52;316:9;303:23;335:30;359:5;335:30;:::i;592:250::-;677:1;687:113;701:6;698:1;695:13;687:113;;;777:11;;;771:18;758:11;;;751:39;723:2;716:10;687:113;;;-1:-1:-1;;834:1:22;816:16;;809:27;592:250::o;847:271::-;889:3;927:5;921:12;954:6;949:3;942:19;970:76;1039:6;1032:4;1027:3;1023:14;1016:4;1009:5;1005:16;970:76;:::i;:::-;1100:2;1079:15;-1:-1:-1;;1075:29:22;1066:39;;;;1107:4;1062:50;;847:271;-1:-1:-1;;847:271:22:o;1123:220::-;1272:2;1261:9;1254:21;1235:4;1292:45;1333:2;1322:9;1318:18;1310:6;1292:45;:::i;1556:180::-;1615:6;1668:2;1656:9;1647:7;1643:23;1639:32;1636:52;;;1684:1;1681;1674:12;1636:52;-1:-1:-1;1707:23:22;;1556:180;-1:-1:-1;1556:180:22:o;1741:173::-;1809:20;;-1:-1:-1;;;;;1858:31:22;;1848:42;;1838:70;;1904:1;1901;1894:12;1919:254;1987:6;1995;2048:2;2036:9;2027:7;2023:23;2019:32;2016:52;;;2064:1;2061;2054:12;2016:52;2087:29;2106:9;2087:29;:::i;:::-;2077:39;2163:2;2148:18;;;;2135:32;;-1:-1:-1;;;1919:254:22:o;2178:328::-;2255:6;2263;2271;2324:2;2312:9;2303:7;2299:23;2295:32;2292:52;;;2340:1;2337;2330:12;2292:52;2363:29;2382:9;2363:29;:::i;:::-;2353:39;;2411:38;2445:2;2434:9;2430:18;2411:38;:::i;:::-;2401:48;;2496:2;2485:9;2481:18;2468:32;2458:42;;2178:328;;;;;:::o;2511:186::-;2570:6;2623:2;2611:9;2602:7;2598:23;2594:32;2591:52;;;2639:1;2636;2629:12;2591:52;2662:29;2681:9;2662:29;:::i;2884:347::-;2949:6;2957;3010:2;2998:9;2989:7;2985:23;2981:32;2978:52;;;3026:1;3023;3016:12;2978:52;3049:29;3068:9;3049:29;:::i;:::-;3039:39;;3128:2;3117:9;3113:18;3100:32;3175:5;3168:13;3161:21;3154:5;3151:32;3141:60;;3197:1;3194;3187:12;3141:60;3220:5;3210:15;;;2884:347;;;;;:::o;3236:127::-;3297:10;3292:3;3288:20;3285:1;3278:31;3328:4;3325:1;3318:15;3352:4;3349:1;3342:15;3368:1138;3463:6;3471;3479;3487;3540:3;3528:9;3519:7;3515:23;3511:33;3508:53;;;3557:1;3554;3547:12;3508:53;3580:29;3599:9;3580:29;:::i;:::-;3570:39;;3628:38;3662:2;3651:9;3647:18;3628:38;:::i;:::-;3618:48;;3713:2;3702:9;3698:18;3685:32;3675:42;;3768:2;3757:9;3753:18;3740:32;3791:18;3832:2;3824:6;3821:14;3818:34;;;3848:1;3845;3838:12;3818:34;3886:6;3875:9;3871:22;3861:32;;3931:7;3924:4;3920:2;3916:13;3912:27;3902:55;;3953:1;3950;3943:12;3902:55;3989:2;3976:16;4011:2;4007;4004:10;4001:36;;;4017:18;;:::i;:::-;4092:2;4086:9;4060:2;4146:13;;-1:-1:-1;;4142:22:22;;;4166:2;4138:31;4134:40;4122:53;;;4190:18;;;4210:22;;;4187:46;4184:72;;;4236:18;;:::i;:::-;4276:10;4272:2;4265:22;4311:2;4303:6;4296:18;4351:7;4346:2;4341;4337;4333:11;4329:20;4326:33;4323:53;;;4372:1;4369;4362:12;4323:53;4428:2;4423;4419;4415:11;4410:2;4402:6;4398:15;4385:46;4473:1;4468:2;4463;4455:6;4451:15;4447:24;4440:35;4494:6;4484:16;;;;;;;3368:1138;;;;;;;:::o;4511:348::-;4563:8;4573:6;4627:3;4620:4;4612:6;4608:17;4604:27;4594:55;;4645:1;4642;4635:12;4594:55;-1:-1:-1;4668:20:22;;4711:18;4700:30;;4697:50;;;4743:1;4740;4733:12;4697:50;4780:4;4772:6;4768:17;4756:29;;4832:3;4825:4;4816:6;4808;4804:19;4800:30;4797:39;4794:59;;;4849:1;4846;4839:12;4794:59;4511:348;;;;;:::o;4864:411::-;4935:6;4943;4996:2;4984:9;4975:7;4971:23;4967:32;4964:52;;;5012:1;5009;5002:12;4964:52;5052:9;5039:23;5085:18;5077:6;5074:30;5071:50;;;5117:1;5114;5107:12;5071:50;5156:59;5207:7;5198:6;5187:9;5183:22;5156:59;:::i;:::-;5234:8;;5130:85;;-1:-1:-1;4864:411:22;-1:-1:-1;;;;4864:411:22:o;5280:479::-;5360:6;5368;5376;5429:2;5417:9;5408:7;5404:23;5400:32;5397:52;;;5445:1;5442;5435:12;5397:52;5481:9;5468:23;5458:33;;5542:2;5531:9;5527:18;5514:32;5569:18;5561:6;5558:30;5555:50;;;5601:1;5598;5591:12;5555:50;5640:59;5691:7;5682:6;5671:9;5667:22;5640:59;:::i;:::-;5280:479;;5718:8;;-1:-1:-1;5614:85:22;;-1:-1:-1;;;;5280:479:22:o;5764:260::-;5832:6;5840;5893:2;5881:9;5872:7;5868:23;5864:32;5861:52;;;5909:1;5906;5899:12;5861:52;5932:29;5951:9;5932:29;:::i;:::-;5922:39;;5980:38;6014:2;6003:9;5999:18;5980:38;:::i;:::-;5970:48;;5764:260;;;;;:::o;6029:380::-;6108:1;6104:12;;;;6151;;;6172:61;;6226:4;6218:6;6214:17;6204:27;;6172:61;6279:2;6271:6;6268:14;6248:18;6245:38;6242:161;;6325:10;6320:3;6316:20;6313:1;6306:31;6360:4;6357:1;6350:15;6388:4;6385:1;6378:15;6242:161;;6029:380;;;:::o;7246:409::-;7448:2;7430:21;;;7487:2;7467:18;;;7460:30;7526:34;7521:2;7506:18;;7499:62;-1:-1:-1;;;7592:2:22;7577:18;;7570:43;7645:3;7630:19;;7246:409::o;8774:232::-;8813:3;8834:17;;;8831:140;;8893:10;8888:3;8884:20;8881:1;8874:31;8928:4;8925:1;8918:15;8956:4;8953:1;8946:15;8831:140;-1:-1:-1;8998:1:22;8987:13;;8774:232::o;9547:1051::-;9723:3;9761:6;9755:13;9787:4;9800:64;9857:6;9852:3;9847:2;9839:6;9835:15;9800:64;:::i;:::-;9895:6;9890:3;9886:16;9873:29;;9922:1;9955:6;9949:13;9987:36;10013:9;9987:36;:::i;:::-;10042:1;10059:18;;;10086:141;;;;10241:1;10236:337;;;;10052:521;;10086:141;-1:-1:-1;;10121:24:22;;10107:39;;10198:16;;10191:24;10177:39;;10166:51;;;-1:-1:-1;10086:141:22;;10236:337;10267:6;10264:1;10257:17;10315:2;10312:1;10302:16;10340:1;10354:169;10368:8;10365:1;10362:15;10354:169;;;10450:14;;10435:13;;;10428:37;10493:16;;;;10385:10;;10354:169;;;10358:3;;10554:8;10547:5;10543:20;10536:27;;10052:521;-1:-1:-1;10589:3:22;;9547:1051;-1:-1:-1;;;;;;;;;9547:1051:22:o;10603:545::-;10705:2;10700:3;10697:11;10694:448;;;10741:1;10766:5;10762:2;10755:17;10811:4;10807:2;10797:19;10881:2;10869:10;10865:19;10862:1;10858:27;10852:4;10848:38;10917:4;10905:10;10902:20;10899:47;;;-1:-1:-1;10940:4:22;10899:47;10995:2;10990:3;10986:12;10983:1;10979:20;10973:4;10969:31;10959:41;;11050:82;11068:2;11061:5;11058:13;11050:82;;;11113:17;;;11094:1;11083:13;11050:82;;;11054:3;;;10603:545;;;:::o;11324:1206::-;11448:18;11443:3;11440:27;11437:53;;;11470:18;;:::i;:::-;11499:94;11589:3;11549:38;11581:4;11575:11;11549:38;:::i;:::-;11543:4;11499:94;:::i;:::-;11619:1;11644:2;11639:3;11636:11;11661:1;11656:616;;;;12316:1;12333:3;12330:93;;;-1:-1:-1;12389:19:22;;;12376:33;12330:93;-1:-1:-1;;11281:1:22;11277:11;;;11273:24;11269:29;11259:40;11305:1;11301:11;;;11256:57;12436:78;;11629:895;;11656:616;9494:1;9487:14;;;9531:4;9518:18;;-1:-1:-1;;11692:17:22;;;11793:9;11815:229;11829:7;11826:1;11823:14;11815:229;;;11918:19;;;11905:33;11890:49;;12025:4;12010:20;;;;11978:1;11966:14;;;;11845:12;11815:229;;;11819:3;12072;12063:7;12060:16;12057:159;;;12196:1;12192:6;12186:3;12180;12177:1;12173:11;12169:21;12165:34;12161:39;12148:9;12143:3;12139:19;12126:33;12122:79;12114:6;12107:95;12057:159;;;12259:1;12253:3;12250:1;12246:11;12242:19;12236:4;12229:33;11629:895;;;11324:1206;;;:::o;12942:401::-;13144:2;13126:21;;;13183:2;13163:18;;;13156:30;13222:34;13217:2;13202:18;;13195:62;-1:-1:-1;;;13288:2:22;13273:18;;13266:35;13333:3;13318:19;;12942:401::o;15186:414::-;15388:2;15370:21;;;15427:2;15407:18;;;15400:30;15466:34;15461:2;15446:18;;15439:62;-1:-1:-1;;;15532:2:22;15517:18;;15510:48;15590:3;15575:19;;15186:414::o;15605:489::-;-1:-1:-1;;;;;15874:15:22;;;15856:34;;15926:15;;15921:2;15906:18;;15899:43;15973:2;15958:18;;15951:34;;;16021:3;16016:2;16001:18;;15994:31;;;15799:4;;16042:46;;16068:19;;16060:6;16042:46;:::i;:::-;16034:54;15605:489;-1:-1:-1;;;;;;15605:489:22:o;16099:249::-;16168:6;16221:2;16209:9;16200:7;16196:23;16192:32;16189:52;;;16237:1;16234;16227:12;16189:52;16269:9;16263:16;16288:30;16312:5;16288:30;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "baseUri()": "9abc8320",
    "getApproved(uint256)": "081812fc",
    "hasMintableNft()": "0e7e0a93",
    "isApprovedForAll(address,address)": "e985e9c5",
    "mint(address)": "6a627842",
    "mintedTokenCount()": "fdf5a49f",
    "minter()": "07546172",
    "name()": "06fdde03",
    "owner()": "8da5cb5b",
    "ownerOf(uint256)": "6352211e",
    "registerBaseUri(string)": "dc613fa1",
    "registerUriExtension(uint256,string)": "e055bf72",
    "renounceOwnership()": "715018a6",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "setMinter(address)": "fca3b5aa",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd",
    "transferOwnership(address)": "f2fde38b",
    "uriExtensions(uint256)": "e5fdcbda"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"minter\",\"type\":\"address\"}],\"name\":\"SetMinter\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseUri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"hasMintableNft\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedTokenCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseUri\",\"type\":\"string\"}],\"name\":\"registerBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_ext\",\"type\":\"string\"}],\"name\":\"registerUriExtension\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_minter\",\"type\":\"address\"}],\"name\":\"setMinter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uriExtensions\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"hasMintableNft()\":{\"notice\":\"This returns true if and only if the next incremental tokenId has registered+valid metadata such that the mint() method will mint a valid token. \"},\"registerBaseUri(string)\":{\"notice\":\"example \\\"https://arweave.net/\\\"\"},\"registerUriExtension(uint256,string)\":{\"notice\":\"example Sk3zkABKYGIdk....exIhVz9jrPCfKeer3I\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/JpegsNFT.sol\":\"JpegsNFT\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@ensdomains/=node_modules/@ensdomains/\",\":@mangrovedao/=node_modules/@mangrovedao/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":ds-test/=lib/solmate/lib/ds-test/src/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat-deploy/=node_modules/hardhat-deploy/\",\":hardhat/=node_modules/hardhat/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"contracts/JpegsNFT.sol\":{\"keccak256\":\"0x283662011f10d79dd4f2da0ce2f38fb98757cbd10b5fd0cdc51ae6a86d7b08a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af9b6c4a1186d8749c18e10e4899296b3f85e062d3954ce873be056432ccc090\",\"dweb:/ipfs/Qme6Cfq76QBuDfTq12QxdzBUdBcv8KNnbnxRTcoWT7Gti3\"]},\"contracts/interfaces/IMintableNFT.sol\":{\"keccak256\":\"0x9304fdc06a11fe3b2b2cc6c580e4e81399882ef045b71ed558efb3671696eef8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://421a40c9cad1bc0d1cf4a193bf2ee04d99e122d1d941e78e7ff9004080968719\",\"dweb:/ipfs/QmcAnJPgrewngzJ6n9ZtAqpTAtywYpbU3MJV8uyfdUyQXA\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30\",\"dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.17+commit.8df45f5f"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "minter",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SetMinter",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "baseUri",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "hasMintableNft",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "mintedTokenCount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "minter",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_baseUri",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerBaseUri"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "_ext",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "registerUriExtension"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_minter",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setMinter"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "uriExtensions",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "hasMintableNft()": {
            "notice": "This returns true if and only if the next incremental tokenId has registered+valid metadata such that the mint() method will mint a valid token. "
          },
          "registerBaseUri(string)": {
            "notice": "example \"https://arweave.net/\""
          },
          "registerUriExtension(uint256,string)": {
            "notice": "example Sk3zkABKYGIdk....exIhVz9jrPCfKeer3I"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@ensdomains/=node_modules/@ensdomains/",
        ":@mangrovedao/=node_modules/@mangrovedao/",
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":ds-test/=lib/solmate/lib/ds-test/src/",
        ":eth-gas-reporter/=node_modules/eth-gas-reporter/",
        ":forge-std/=lib/forge-std/src/",
        ":hardhat-deploy/=node_modules/hardhat-deploy/",
        ":hardhat/=node_modules/hardhat/",
        ":solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "contracts/JpegsNFT.sol": "JpegsNFT"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/JpegsNFT.sol": {
        "keccak256": "0x283662011f10d79dd4f2da0ce2f38fb98757cbd10b5fd0cdc51ae6a86d7b08a8",
        "urls": [
          "bzz-raw://af9b6c4a1186d8749c18e10e4899296b3f85e062d3954ce873be056432ccc090",
          "dweb:/ipfs/Qme6Cfq76QBuDfTq12QxdzBUdBcv8KNnbnxRTcoWT7Gti3"
        ],
        "license": "MIT"
      },
      "contracts/interfaces/IMintableNFT.sol": {
        "keccak256": "0x9304fdc06a11fe3b2b2cc6c580e4e81399882ef045b71ed558efb3671696eef8",
        "urls": [
          "bzz-raw://421a40c9cad1bc0d1cf4a193bf2ee04d99e122d1d941e78e7ff9004080968719",
          "dweb:/ipfs/QmcAnJPgrewngzJ6n9ZtAqpTAtywYpbU3MJV8uyfdUyQXA"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x1e854874c68bec05be100dc0092cb5fbbc71253d370ae98ddef248bbfc3fe118",
        "urls": [
          "bzz-raw://ef0fb6e809779426dc2ac201149bbad4aecdc5810874f2843b050e8b5fef8d30",
          "dweb:/ipfs/QmPDRjaNxmcyxLUKvv8Fxk5eWcf7xvC5S9JpbtqvE7Cadu"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "contracts/JpegsNFT.sol",
    "id": 220,
    "exportedSymbols": {
      "ERC721": [
        22151
      ],
      "IERC165": [
        22875
      ],
      "IMintableNFT": [
        448
      ],
      "JpegsNFT": [
        219
      ],
      "Ownable": [
        21146
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2610:0",
    "nodes": [
      {
        "id": 1,
        "nodeType": "PragmaDirective",
        "src": "32:24:0",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 3,
        "nodeType": "ImportDirective",
        "src": "61:71:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 220,
        "sourceUnit": 22152,
        "symbolAliases": [
          {
            "foreign": {
              "id": 2,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22151,
              "src": "69:6:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5,
        "nodeType": "ImportDirective",
        "src": "136:67:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 220,
        "sourceUnit": 21147,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21146,
              "src": "144:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 7,
        "nodeType": "ImportDirective",
        "src": "205:59:0",
        "nodes": [],
        "absolutePath": "contracts/interfaces/IMintableNFT.sol",
        "file": "./interfaces/IMintableNFT.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 220,
        "sourceUnit": 449,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6,
              "name": "IMintableNFT",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 448,
              "src": "213:12:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 9,
        "nodeType": "ImportDirective",
        "src": "266:80:0",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 220,
        "sourceUnit": 22876,
        "symbolAliases": [
          {
            "foreign": {
              "id": 8,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 22875,
              "src": "274:7:0",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 219,
        "nodeType": "ContractDefinition",
        "src": "364:2277:0",
        "nodes": [
          {
            "id": 17,
            "nodeType": "VariableDeclaration",
            "src": "424:21:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "07546172",
            "mutability": "mutable",
            "name": "minter",
            "nameLocation": "439:6:0",
            "scope": 219,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 16,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "424:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 19,
            "nodeType": "VariableDeclaration",
            "src": "452:21:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "9abc8320",
            "mutability": "mutable",
            "name": "baseUri",
            "nameLocation": "466:7:0",
            "scope": 219,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 18,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "452:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 23,
            "nodeType": "VariableDeclaration",
            "src": "480:47:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "e5fdcbda",
            "mutability": "mutable",
            "name": "uriExtensions",
            "nameLocation": "514:13:0",
            "scope": 219,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
              "typeString": "mapping(uint256 => string)"
            },
            "typeName": {
              "id": 22,
              "keyType": {
                "id": 20,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "488:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "480:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                "typeString": "mapping(uint256 => string)"
              },
              "valueType": {
                "id": 21,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "499:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 25,
            "nodeType": "VariableDeclaration",
            "src": "534:31:0",
            "nodes": [],
            "constant": false,
            "functionSelector": "fdf5a49f",
            "mutability": "mutable",
            "name": "mintedTokenCount",
            "nameLocation": "549:16:0",
            "scope": 219,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "534:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 29,
            "nodeType": "EventDefinition",
            "src": "579:32:0",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "cec52196e972044edde8689a1b608e459c5946b7f3e5c8cd3d6d8e126d422e1c",
            "name": "SetMinter",
            "nameLocation": "585:9:0",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "minter",
                  "nameLocation": "603:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "595:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "595:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "594:16:0"
            }
          },
          {
            "id": 41,
            "nodeType": "ModifierDefinition",
            "src": "618:108:0",
            "nodes": [],
            "body": {
              "id": 40,
              "nodeType": "Block",
              "src": "640:86:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 35,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 32,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "658:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "662:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "658:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 34,
                          "name": "minter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "672:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "658:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63616c6c6572206973206e6f7420746865206d696e7465722e",
                        "id": 36,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "680:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a90f9b76964abc7d06c76ee1c69c8e42f4504d7197e298f049e825216e919b2d",
                          "typeString": "literal_string \"caller is not the minter.\""
                        },
                        "value": "caller is not the minter."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a90f9b76964abc7d06c76ee1c69c8e42f4504d7197e298f049e825216e919b2d",
                          "typeString": "literal_string \"caller is not the minter.\""
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "650:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "650:58:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38,
                  "nodeType": "ExpressionStatement",
                  "src": "650:58:0"
                },
                {
                  "id": 39,
                  "nodeType": "PlaceholderStatement",
                  "src": "718:1:0"
                }
              ]
            },
            "name": "onlyMinter",
            "nameLocation": "627:10:0",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:2:0"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 51,
            "nodeType": "FunctionDefinition",
            "src": "733:51:0",
            "nodes": [],
            "body": {
              "id": 50,
              "nodeType": "Block",
              "src": "782:2:0",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "30784a50454773",
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "754:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_56980bde0dd6585b8ec85b0f7e43e4bfc8fed69d588f5d01a31dc478c1915ade",
                      "typeString": "literal_string \"0xJPEGs\""
                    },
                    "value": "0xJPEGs"
                  },
                  {
                    "hexValue": "4a5047",
                    "id": 45,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "765:5:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_fe7076019f0e2abb1ef4158f9475da36d595822bae7d85f9d79f0075c9972346",
                      "typeString": "literal_string \"JPG\""
                    },
                    "value": "JPG"
                  }
                ],
                "id": 46,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 43,
                  "name": "ERC721",
                  "nameLocations": [
                    "747:6:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22151,
                  "src": "747:6:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "747:24:0"
              },
              {
                "arguments": [],
                "id": 48,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 47,
                  "name": "Ownable",
                  "nameLocations": [
                    "772:7:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21146,
                  "src": "772:7:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "772:9:0"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "744:2:0"
            },
            "returnParameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "782:0:0"
            },
            "scope": 219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 72,
            "nodeType": "FunctionDefinition",
            "src": "977:164:0",
            "nodes": [],
            "body": {
              "id": 71,
              "nodeType": "Block",
              "src": "1030:111:0",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    58
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 58,
                      "mutability": "mutable",
                      "name": "ext",
                      "nameLocation": "1056:3:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 71,
                      "src": "1042:17:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 57,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "1042:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 62,
                  "initialValue": {
                    "baseExpression": {
                      "id": 59,
                      "name": "uriExtensions",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "1062:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                        "typeString": "mapping(uint256 => string storage ref)"
                      }
                    },
                    "id": 61,
                    "indexExpression": {
                      "id": 60,
                      "name": "mintedTokenCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1076:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1062:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1042:51:0"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "arguments": [
                          {
                            "id": 65,
                            "name": "ext",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 58,
                            "src": "1117:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 64,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1111:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 63,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "1111:5:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 66,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1111:10:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      "id": 67,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1122:6:0",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1111:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 68,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1131:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1111:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 56,
                  "id": 70,
                  "nodeType": "Return",
                  "src": "1104:28:0"
                }
              ]
            },
            "baseFunctions": [
              447
            ],
            "documentation": {
              "id": 52,
              "nodeType": "StructuredDocumentation",
              "src": "792:180:0",
              "text": "This returns true if and only if the next incremental\ntokenId has registered+valid metadata such that the mint()\nmethod will mint a valid token. "
            },
            "functionSelector": "0e7e0a93",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasMintableNft",
            "nameLocation": "986:14:0",
            "parameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:2:0"
            },
            "returnParameters": {
              "id": 56,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 72,
                  "src": "1024:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1024:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1023:6:0"
            },
            "scope": 219,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 100,
            "nodeType": "FunctionDefinition",
            "src": "1148:261:0",
            "nodes": [],
            "body": {
              "id": 99,
              "nodeType": "Block",
              "src": "1220:189:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 82,
                          "name": "hasMintableNft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 72,
                          "src": "1247:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                            "typeString": "function () view returns (bool)"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1247:16:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5468657265206973206e6f7420616e206e667420617661696c61626c6520746f206d696e742e",
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1264:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ee95d8263a4ccd6f7fc27705ec1a9ba45858872f45ec10bc465655d030e4547",
                          "typeString": "literal_string \"There is not an nft available to mint.\""
                        },
                        "value": "There is not an nft available to mint."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ee95d8263a4ccd6f7fc27705ec1a9ba45858872f45ec10bc465655d030e4547",
                          "typeString": "literal_string \"There is not an nft available to mint.\""
                        }
                      ],
                      "id": 81,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1239:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1239:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1239:66:0"
                },
                {
                  "expression": {
                    "id": 90,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 87,
                      "name": "tokenId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79,
                      "src": "1316:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 89,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1326:18:0",
                      "subExpression": {
                        "id": 88,
                        "name": "mintedTokenCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "1326:16:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1316:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 91,
                  "nodeType": "ExpressionStatement",
                  "src": "1316:28:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 93,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74,
                        "src": "1361:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 94,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79,
                        "src": "1365:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 92,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21825,
                      "src": "1355:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 95,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 96,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:18:0"
                },
                {
                  "expression": {
                    "id": 97,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79,
                    "src": "1395:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 80,
                  "id": 98,
                  "nodeType": "Return",
                  "src": "1388:14:0"
                }
              ]
            },
            "baseFunctions": [
              442
            ],
            "functionSelector": "6a627842",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 77,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 76,
                  "name": "onlyMinter",
                  "nameLocations": [
                    "1182:10:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 41,
                  "src": "1182:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1182:10:0"
              }
            ],
            "name": "mint",
            "nameLocation": "1157:4:0",
            "parameters": {
              "id": 75,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1170:2:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1162:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1161:12:0"
            },
            "returnParameters": {
              "id": 80,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1211:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 100,
                  "src": "1203:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1203:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1202:17:0"
            },
            "scope": 219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 116,
            "nodeType": "FunctionDefinition",
            "src": "1415:121:0",
            "nodes": [],
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "1468:68:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 107,
                      "name": "minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1479:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 108,
                      "name": "_minter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 102,
                      "src": "1488:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1479:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 110,
                  "nodeType": "ExpressionStatement",
                  "src": "1479:16:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 112,
                        "name": "_minter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 102,
                        "src": "1521:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 111,
                      "name": "SetMinter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "1511:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1511:18:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 114,
                  "nodeType": "EmitStatement",
                  "src": "1506:23:0"
                }
              ]
            },
            "functionSelector": "fca3b5aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 104,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1458:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21065,
                  "src": "1458:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1458:9:0"
              }
            ],
            "name": "setMinter",
            "nameLocation": "1424:9:0",
            "parameters": {
              "id": 103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 102,
                  "mutability": "mutable",
                  "name": "_minter",
                  "nameLocation": "1442:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 116,
                  "src": "1434:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1434:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1433:17:0"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1468:0:0"
            },
            "scope": 219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 129,
            "nodeType": "FunctionDefinition",
            "src": "1594:106:0",
            "nodes": [],
            "body": {
              "id": 128,
              "nodeType": "Block",
              "src": "1664:36:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 124,
                      "name": "baseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19,
                      "src": "1675:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 125,
                      "name": "_baseUri",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 119,
                      "src": "1685:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "1675:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 127,
                  "nodeType": "ExpressionStatement",
                  "src": "1675:18:0"
                }
              ]
            },
            "documentation": {
              "id": 117,
              "nodeType": "StructuredDocumentation",
              "src": "1543:45:0",
              "text": "example \"https://arweave.net/\""
            },
            "functionSelector": "dc613fa1",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 122,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 121,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1654:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21065,
                  "src": "1654:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1654:9:0"
              }
            ],
            "name": "registerBaseUri",
            "nameLocation": "1603:15:0",
            "parameters": {
              "id": 120,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 119,
                  "mutability": "mutable",
                  "name": "_baseUri",
                  "nameLocation": "1636:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 129,
                  "src": "1620:24:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 118,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1620:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1618:28:0"
            },
            "returnParameters": {
              "id": 123,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1664:0:0"
            },
            "scope": 219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 146,
            "nodeType": "FunctionDefinition",
            "src": "1770:137:0",
            "nodes": [],
            "body": {
              "id": 145,
              "nodeType": "Block",
              "src": "1858:49:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 139,
                        "name": "uriExtensions",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1869:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                          "typeString": "mapping(uint256 => string storage ref)"
                        }
                      },
                      "id": 141,
                      "indexExpression": {
                        "id": 140,
                        "name": "_tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 132,
                        "src": "1883:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1869:23:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 142,
                      "name": "_ext",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 134,
                      "src": "1895:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "src": "1869:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 144,
                  "nodeType": "ExpressionStatement",
                  "src": "1869:30:0"
                }
              ]
            },
            "documentation": {
              "id": 130,
              "nodeType": "StructuredDocumentation",
              "src": "1707:58:0",
              "text": "example Sk3zkABKYGIdk....exIhVz9jrPCfKeer3I"
            },
            "functionSelector": "e055bf72",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 137,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 136,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1848:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21065,
                  "src": "1848:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "1848:9:0"
              }
            ],
            "name": "registerUriExtension",
            "nameLocation": "1779:20:0",
            "parameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 132,
                  "mutability": "mutable",
                  "name": "_tokenId",
                  "nameLocation": "1809:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1801:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 131,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1801:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 134,
                  "mutability": "mutable",
                  "name": "_ext",
                  "nameLocation": "1835:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 146,
                  "src": "1819:20:0",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 133,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1799:41:0"
            },
            "returnParameters": {
              "id": 138,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:0:0"
            },
            "scope": 219,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 155,
            "nodeType": "FunctionDefinition",
            "src": "1915:98:0",
            "nodes": [],
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "1982:31:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 152,
                    "name": "baseUri",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 19,
                    "src": "1999:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "functionReturnParameters": 151,
                  "id": 153,
                  "nodeType": "Return",
                  "src": "1992:14:0"
                }
              ]
            },
            "baseFunctions": [
              21438
            ],
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_baseURI",
            "nameLocation": "1924:8:0",
            "overrides": {
              "id": 148,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1949:8:0"
            },
            "parameters": {
              "id": 147,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1932:2:0"
            },
            "returnParameters": {
              "id": 151,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "1967:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 149,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1967:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1966:15:0"
            },
            "scope": 219,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 193,
            "nodeType": "FunctionDefinition",
            "src": "2022:272:0",
            "nodes": [],
            "body": {
              "id": 192,
              "nodeType": "Block",
              "src": "2102:192:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 164,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2127:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 163,
                      "name": "_requireMinted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22047,
                      "src": "2112:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2112:23:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 166,
                  "nodeType": "ExpressionStatement",
                  "src": "2112:23:0"
                },
                {
                  "assignments": [
                    168
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 168,
                      "mutability": "mutable",
                      "name": "baseURI",
                      "nameLocation": "2160:7:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 192,
                      "src": "2146:21:0",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 167,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2146:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 171,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 169,
                      "name": "_baseURI",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        155
                      ],
                      "referencedDeclaration": 155,
                      "src": "2170:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () view returns (string memory)"
                      }
                    },
                    "id": 170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2170:10:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2146:34:0"
                },
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "arguments": [
                            {
                              "id": 174,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2203:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "id": 173,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2197:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 172,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2197:5:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 175,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2197:14:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2212:6:0",
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "2197:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": ">",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "2197:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "hexValue": "",
                      "id": 189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2285:2:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                        "typeString": "literal_string \"\""
                      },
                      "value": ""
                    },
                    "id": 190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "2197:90:0",
                    "trueExpression": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 183,
                              "name": "baseURI",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 168,
                              "src": "2249:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 184,
                                "name": "uriExtensions",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 23,
                                "src": "2258:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_string_storage_$",
                                  "typeString": "mapping(uint256 => string storage ref)"
                                }
                              },
                              "id": 186,
                              "indexExpression": {
                                "id": 185,
                                "name": "tokenId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 157,
                                "src": "2272:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "2258:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_storage",
                                "typeString": "string storage ref"
                              }
                            ],
                            "expression": {
                              "id": 181,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "2232:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 182,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2236:12:0",
                            "memberName": "encodePacked",
                            "nodeType": "MemberAccess",
                            "src": "2232:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2232:49:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 180,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2225:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 179,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2225:6:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2225:57:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "functionReturnParameters": 162,
                  "id": 191,
                  "nodeType": "Return",
                  "src": "2190:97:0"
                }
              ]
            },
            "baseFunctions": [
              21429
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "2031:8:0",
            "overrides": {
              "id": 159,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2069:8:0"
            },
            "parameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "2048:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2040:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2040:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2039:17:0"
            },
            "returnParameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 161,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 193,
                  "src": "2087:13:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 160,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2087:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2086:15:0"
            },
            "scope": 219,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 218,
            "nodeType": "FunctionDefinition",
            "src": "2305:325:0",
            "nodes": [],
            "body": {
              "id": 217,
              "nodeType": "Block",
              "src": "2387:243:0",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 211,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 203,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 201,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2411:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783766353832386430",
                            "id": 202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2426:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2136484048_by_1",
                              "typeString": "int_const 2136484048"
                            },
                            "value": "0x7f5828d0"
                          },
                          "src": "2411:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 204,
                            "name": "interfaceId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 195,
                            "src": "2473:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30783766353832386430",
                            "id": 205,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2488:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2136484048_by_1",
                              "typeString": "int_const 2136484048"
                            },
                            "value": "0x7f5828d0"
                          },
                          "src": "2473:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2411:87:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "||",
                      "rightExpression": {
                        "commonType": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        },
                        "id": 210,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 208,
                          "name": "interfaceId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "2526:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30783830616335386364",
                          "id": 209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2541:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2158778573_by_1",
                            "typeString": "int_const 2158778573"
                          },
                          "value": "0x80ac58cd"
                        },
                        "src": "2526:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "src": "2411:140:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 214,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 212,
                        "name": "interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2578:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30783562356531333966",
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2593:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1532892063_by_1",
                          "typeString": "int_const 1532892063"
                        },
                        "value": "0x5b5e139f"
                      },
                      "src": "2578:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2411:192:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 200,
                  "id": 216,
                  "nodeType": "Return",
                  "src": "2404:199:0"
                }
              ]
            },
            "baseFunctions": [
              21318
            ],
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "2314:17:0",
            "overrides": {
              "id": 197,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2359:8:0"
            },
            "parameters": {
              "id": 196,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 195,
                  "mutability": "mutable",
                  "name": "interfaceId",
                  "nameLocation": "2339:11:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2332:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2332:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2331:20:0"
            },
            "returnParameters": {
              "id": 200,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 199,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 218,
                  "src": "2382:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2382:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2381:6:0"
            },
            "scope": 219,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10,
              "name": "ERC721",
              "nameLocations": [
                "385:6:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 22151,
              "src": "385:6:0"
            },
            "id": 11,
            "nodeType": "InheritanceSpecifier",
            "src": "385:6:0"
          },
          {
            "baseName": {
              "id": 12,
              "name": "Ownable",
              "nameLocations": [
                "392:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 21146,
              "src": "392:7:0"
            },
            "id": 13,
            "nodeType": "InheritanceSpecifier",
            "src": "392:7:0"
          },
          {
            "baseName": {
              "id": 14,
              "name": "IMintableNFT",
              "nameLocations": [
                "400:12:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 448,
              "src": "400:12:0"
            },
            "id": 15,
            "nodeType": "InheritanceSpecifier",
            "src": "400:12:0"
          }
        ],
        "canonicalName": "JpegsNFT",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          219,
          448,
          21146,
          22151,
          22312,
          22267,
          22863,
          22875,
          22664
        ],
        "name": "JpegsNFT",
        "nameLocation": "373:8:0",
        "scope": 220,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 0
}