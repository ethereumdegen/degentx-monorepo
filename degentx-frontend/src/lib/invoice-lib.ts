import { Provider } from "@ethersproject/abstract-provider"
import axios from "axios"
import { ethers } from "ethers"

  
import { getBackendServerUrl } from "./app-helper"


import {
 
    PayspecPaymentElement,
    PayspecPaymentEffect,
  
    PayspecInvoice,
     
    generatePayspecInvoiceSimple
} from 'payspec-js'

 

/*


  payspecContractAddress: '0x...',   -- AUTOGENERATED 
  description: 'Invoice for services',
  nonce: '0x...',   -- AUTOGENERATED   
  token: '0x...',
  totalAmountDue: '1000000000000000000',  -- GENERATED FROM PAYMENTS ARRAY
  payToArrayStringified: '["0x..."]',  -- GENERATED FROM PAYMENTS ARRAY
  amountsDueArrayStringified: '["1000000000000000000"]',   -- GENERATED FROM PAYMENTS ARRAY
  expiresAt: 1234567890   -- AUTOGENERATED 


*/

enum PayspecEffectType {

    GRANT_PRODUCT_ACCESS 
    
}


interface PayspecPaymentEffect{

    type: PayspecEffectType, 

    invoiceUUID: string, //triggers when this invoice is paid 



    referenceId: string, //a product id for example 

    targetPublicAddress: string, 


}

/*

 
*/

export async function addInvoice({
    chainId, 
    description, 
    tokenAddress, 
    paymentsArray,

    paymentEffects,

    ownerAddress,
    authToken,
    
    onFinished
}:{
    chainId: number,
    description: string,
    tokenAddress:string, 
    paymentsArray:PayspecPaymentElement[],

    paymentEffects: PayspecPaymentEffect[], 

    ownerAddress: string, 
    authToken:string, 

    onFinished: ( ) => any
}){

   

    const invoice:PayspecInvoice = generatePayspecInvoiceSimple(
        {
            chainId,
            description,
            tokenAddress,
            paymentsArray
        }
    )
   

    const backendApiUri = `${getBackendServerUrl()}/v1/invoice`
    let response = await axios.post(backendApiUri,{
        invoice,

        paymentEffects,

        publicAddress: ownerAddress,//: web3Store.account,
        authToken//: web3Store.authToken 
      
    }) 

    if(!response || !response.data ) return undefined 

    console.log({response})

    onFinished() 

}