 
 
import { useState, useEffect } from 'react';
 
import { useOutletContext, useParams, useSearchParams,  useNavigate} from 'react-router-dom';

import { observer } from "mobx-react";
import {observe} from 'mobx'


 
import SignInRequiredWarning from "@/views/components/sign-in-required-warning/Main"

 
import InvoiceForm from '@/views/components/invoice/invoice-form/Main.jsx'
 

import {addInvoice} from "@/lib/invoice-lib"
import {applyProtocolFeeToPaymentElements, generatePayspecInvoiceSimple, getCurrencyTokenAddress, PayspecPaymentElement} from 'payspec-js'

import AlertBanner from "@/views/components/alert-banner/Main";

/*

http://localhost:8081/checkout?tokenAddress=0xb6ed7644c69416d67b522e20bc294a9a9b405b31&payTo=0xb6ed7644c69416d67b522e20bc294a9a9b405b31&payAmount=5000&chainId=2

*/

function Main(  ) {
 
     
    const [web3Store] = useOutletContext(); // <-- access context value
 
  

    const [errorMessage, errorMessageSet] = useState(null)
 

    let generatedInvoice 

    try{
    
    const [searchParams, ] = useSearchParams();
    let tokenAddress = searchParams.get("tokenAddress")
    let payTo = searchParams.get("payTo")
    let payAmount = searchParams.get("payAmount")
    let chainId = searchParams.get("chainId") || 1
    let description = searchParams.get("description") || ""
    let duration = searchParams.get("duration") || 60 * 60 * 24 * 30 // 30 days

    console.log(payTo,payAmount)

    //PayspecPaymentElement[]
    const paymentsArrayBasic = [
      {
        payTo: payTo,
        amountDue: payAmount,
      }
    ]

    generatedInvoice = generatePayspecInvoiceSimple({

      tokenAddress,
      chainId,
      paymentsArray : applyProtocolFeeToPaymentElements(paymentsArrayBasic),
      description,
      durationSeconds: duration

    })

  }catch(e){
    console.error(e)
  }
 
  
  const navigate = useNavigate();
   
   observe(web3Store, 'account', function() {
    console.log('acct:', web3Store.account); 
  });
  
  observe(web3Store, 'authorized', function() {
    console.log('acct:', web3Store.account);
    
  });
   


  const renderError = (msg) => {   
    errorMessageSet(msg);
  }

 //load  on mount 
 useEffect(()=>{
  
}, []) // <-- empty dependency array



 
/*


 payspecContractAddress: '0x...',   -- AUTOGENERATED 
  description: 'Invoice for services',
  nonce: '0x...',   -- AUTOGENERATED   
  token: '0x...',
  totalAmountDue: '1000000000000000000',
  payToArrayStringified: '["0x..."]',
  amountsDueArrayStringified: '["1000000000000000000"]',
  expiresAt: 1234567890   -- AUTOGENERATED 


*/
 

  return (
    <>
      <div className="intro-y flex flex-col sm:flex-row items-center mt-2">
       
      </div>
      <div className="intro-y box pt-4 px-5 pb-4 mt-2 flex flex-col items-center">
      
     
 

        <div className="pt-4 px-2 pb-16 w-full">
      
      
        {/* BEGIN:   Title */}
         
        <div className=" mt-2 mb-5 ">
          <div className="text-xl   my-2 ">
           Invoice
          </div>
          
        
        </div>
       
        {/* END: Tx Title */}
        {/* BEGIN: Tx Content */}

        <div className="w-full">

 
    
       
      
        <div className="flex flex-col">

         
            <div className="px-4 mb-16 text-lg font-bold">
               
            </div>
             

            <div>


              { /*  
              
              */}

              {!generatedInvoice && 
              
                <div> 
                  Unable to generate invoice
                </div>
              }

              {generatedInvoice && 
         
         

              <SimpleButton
              >

                Pay
              </SimpleButton>
              }


              <div>




              </div>




            <AlertBanner
              message={errorMessage}
            />

            </div>
         
         </div>
          
          

          
        </div>
            
    
        {/* END: Tx Content */}
      </div>
      </div>

    </>
  );
}

export default observer(Main);


 